"0","fc_bldg <- readRDS(""fc_bldg.rds"")"
"0",""
"0","fc_block_veh_per_bldg <-"
"0","  fc_bldg %>% "
"0","  filter(type == ""residential"" | type == ""house"" | type == ""apartments"" | is.na(type)) %>% "
"0","  dplyr::select(osm_id) %>% # unique ID for each building"
"0","  st_centroid() %>% "
"0","  st_join(fc_blocks %>% dplyr::select(GEOID20, POP20)) %>% # block shapes"
"0","  st_join(fc_cbg %>% dplyr::select(cbg = GEOID)) %>% # cbg shapes"
"0","  st_drop_geometry() %>% "
"0","  group_by(cbg, GEOID20, POP20) %>% # ""assuming population is distributed evenly across buildings in a block"""
"0","  summarize(bldg_count = n()) %>% # count the number of rows because all osm_id should be unique"
"0","  group_by(cbg) %>% "
"0","  summarise(cbg_pop = sum(POP20), cbg_bldg_count = sum(bldg_count)) %>% "
"0","  left_join(smc_bg_vehicle_total) %>% # joining vehicle count by block group"
"0","  ungroup() %>% "
"0","  group_by(cbg) %>% # ""and vehicles are distributed evenly across population"""
"0","  mutate("
"0","    veh_per_person = estimate/cbg_pop,"
"0","    ppl_per_bldg = cbg_pop/cbg_bldg_count,"
"0","    veh_per_bldg = veh_per_person*ppl_per_bldg # fractional result ok"
"0","  )"
"2","Warning in st_centroid.sf(.) :"
"2","
 "
"2"," st_centroid assumes attributes are constant over geometries of x
"
"1","`summarise()` has grouped output by 'cbg', 'GEOID20'. You can override using the `.groups` argument.
"
"1","Joining, by = ""cbg""
"
"0","# dataset with individual buildings, vehicle counts for each building"
"0","fc_veh_per_bldg <- fc_bldg %>% "
"0","  filter(type == ""residential"" | type == ""house"" | type == ""apartments"" | is.na(type)) %>% "
"0","  dplyr::select(osm_id) %>% "
"0","  st_centroid() %>% "
"0","  st_join(fc_blocks %>% dplyr::select(block = GEOID20)) %>% "
"0","  st_join(fc_cbg %>% dplyr::select(cbg = GEOID)) %>% # cbg shapes"
"0","  left_join(fc_block_veh_per_bldg %>% dplyr::select(ppl_per_bldg, veh_per_bldg, cbg_pop))"
"2","Warning in st_centroid.sf(.) :"
"2","
 "
"2"," st_centroid assumes attributes are constant over geometries of x
"
"1","Adding missing grouping variables: `cbg`
"
"1","Joining, by = ""cbg""
"
