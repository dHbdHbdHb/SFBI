cbg =
paste0(state,county,tract,block_group)
) %>%
dplyr::select(!c(GEO_ID,state,county,tract,block_group,NAME) & !ends_with(c("EA","MA","M"))) %>%
pivot_longer(
ends_with("E"),
names_to = "variable",
values_to = "estimate"
) %>%
left_join(
acs_vars_2019_5yr %>%
dplyr::select(name, label),
by = c("variable" = "name")
) %>%
dplyr::select(-variable) %>%
separate(
label,
into = c(NA, NA, "tenure", "vehicles"),
sep = "!!"
) %>%
filter(!is.na("vehicles")) %>%
filter(cbg %in% epa_cbg$GEOID)
acs_vars_2019_5yr <- readRDS("acs_vars_2019_5yr.rds")
epa_blocks <- readRDS("epa_blocks.rds")
smc_bg_vehicle <-
getCensus(
name = "acs/acs5",
vintage = 2019,
region = "block group:*",
regionin = "state:06+county:081",
vars = "group(B25044)"
) %>%
mutate(
cbg =
paste0(state,county,tract,block_group)
) %>%
dplyr::select(!c(GEO_ID,state,county,tract,block_group,NAME) & !ends_with(c("EA","MA","M"))) %>%
pivot_longer(
ends_with("E"),
names_to = "variable",
values_to = "estimate"
) %>%
left_join(
acs_vars_2019_5yr %>%
dplyr::select(name, label),
by = c("variable" = "name")
) %>%
dplyr::select(-variable) %>%
separate(
label,
into = c(NA, NA, "tenure", "vehicles"),
sep = "!!"
) %>%
filter(!is.na("vehicles")) %>%
filter(cbg %in% epa_cbg$GEOID)
epa_cbg <- block_groups("CA","San Mateo", cb = F, progress_bar = F, year = 2019) %>%
filter(GEOID == "060816119003") %>%
st_transform(4326)
epa_bldgs <- readRDS("epa_bldg.rds") %>%
.[epa_cbg,]
smc_bg_vehicle <-
getCensus(
name = "acs/acs5",
vintage = 2019,
region = "block group:*",
regionin = "state:06+county:081",
vars = "group(B25044)"
) %>%
mutate(
cbg =
paste0(state,county,tract,block_group)
) %>%
dplyr::select(!c(GEO_ID,state,county,tract,block_group,NAME) & !ends_with(c("EA","MA","M"))) %>%
pivot_longer(
ends_with("E"),
names_to = "variable",
values_to = "estimate"
) %>%
left_join(
acs_vars_2019_5yr %>%
dplyr::select(name, label),
by = c("variable" = "name")
) %>%
dplyr::select(-variable) %>%
separate(
label,
into = c(NA, NA, "tenure", "vehicles"),
sep = "!!"
) %>%
filter(!is.na("vehicles")) %>%
filter(cbg %in% epa_cbg$GEOID)
View(smc_bg_vehicle)
smc_bg_vehicle <-
getCensus(
name = "acs/acs5",
vintage = 2019,
region = "block group:*",
regionin = "state:06+county:081",
vars = "group(B25044)"
) %>%
mutate(
cbg =
paste0(state,county,tract,block_group)
) %>%
dplyr::select(!c(GEO_ID,state,county,tract,block_group,NAME) & !ends_with(c("EA","MA","M"))) %>%
pivot_longer(
ends_with("E"),
names_to = "variable",
values_to = "estimate"
) %>%
left_join(
acs_vars_2019_5yr %>%
dplyr::select(name, label),
by = c("variable" = "name")
) %>%
dplyr::select(-variable)
smc_bg_vehicle <-
getCensus(
name = "acs/acs5",
vintage = 2019,
region = "block group:*",
regionin = "state:06+county:081",
vars = "group(B25044)"
) %>%
mutate(
cbg =
paste0(state,county,tract,block_group)
) %>%
dplyr::select(!c(GEO_ID,state,county,tract,block_group,NAME) & !ends_with(c("EA","MA","M"))) %>%
pivot_longer(
ends_with("E"),
names_to = "variable",
values_to = "estimate"
) %>%
left_join(
acs_vars_2019_5yr %>%
dplyr::select(name, label),
by = c("variable" = "name")
) %>%
dplyr::select(-variable) %>%
separate(
label,
into = c(NA, NA, "tenure", "vehicles"),
sep = "!!"
)
smc_bg_vehicle <-
getCensus(
name = "acs/acs5",
vintage = 2019,
region = "block group:*",
regionin = "state:06+county:081",
vars = "group(B25044)"
) %>%
mutate(
cbg =
paste0(state,county,tract,block_group)
) %>%
dplyr::select(!c(GEO_ID,state,county,tract,block_group,NAME) & !ends_with(c("EA","MA","M"))) %>%
pivot_longer(
ends_with("E"),
names_to = "variable",
values_to = "estimate"
) %>%
left_join(
acs_vars_2019_5yr %>%
dplyr::select(name, label),
by = c("variable" = "name")
) %>%
dplyr::select(-variable) %>%
separate(
label,
into = c(NA, NA, "tenure", "vehicles"),
sep = "!!"
) %>%
filter(!is.na(vehicles)) %>%
filter(cbg %in% epa_cbg$GEOID)
is.na("vehicles")
emfac <-
read_csv("emfac.csv", skip = 8) %>%
select(`Calendar Year`, `Vehicle Category`, Population ) %>%
ungroup() %>%
group_by(`Calendar Year`, `Vehicle Category`) %>%
summarise(total = Population)
View(emfac)
emfac <-
read_csv("emfac.csv", skip = 8) %>%
select(`Calendar Year`, `Vehicle Category`, Population ) %>%
ungroup() %>%
group_by(`Calendar Year`, `Vehicle Category`)
emfac <-
read_csv("emfac.csv", skip = 8) %>%
select(`Calendar Year`, `Vehicle Category`, Population ) %>%
ungroup() %>%
group_by(`Calendar Year`, `Vehicle Category`) %>%
summarise(total = sum(Population))
emfac <-
read_csv("emfac.csv", skip = 8) %>%
select(`Calendar Year`, `Vehicle Category`, Population ) %>%
ungroup() %>%
group_by(`Calendar Year`) %>%
summarise(total = sum(Population))
# percentage change column from year to year
# mutate(
#   perc_change = 2030$total/2020$total and so on
# )
emfac <-
read_csv("emfac.csv", skip = 8) %>%
select(`Calendar Year`, `Vehicle Category`, Population ) %>%
ungroup() %>%
group_by(`Calendar Year`) %>%
summarise(total = sum(Population)) %>%
mutate(
lag_total = lag(total)
)
emfac <-
read_csv("emfac.csv", skip = 8) %>%
select(`Calendar Year`, `Vehicle Category`, Population ) %>%
ungroup() %>%
group_by(`Calendar Year`) %>%
summarise(total = sum(Population)) %>%
mutate(
perc_change = total / lag(total)
)
epa_bldg_flooded_max <-
readRDS("epa_bldg_flooded_max.rds") %>%
st_transform(projection) %>%
mutate(
area = st_area(.) %>% as.numeric()
)
epa_bldg_perc_damage <- readRDS("epa_bldg_perc_damage.rds")
epa_bldg_flooded_max <-
epa_bldg %>%
st_transform(4326) %>%
.[flood_max_extent,] %>%
saveRDS("epa_bldg_flooded_max.rds")
epa_bldg <- readRDS("epa_bldg.rds")
flood_max <-
raster("SLR050_RP100_epa_flood.tif")
flood_max_extent <-
flood_max %>%
st_as_stars() %>%
mutate(SLR050_RP100_epa_flood = ifelse(
!is.na(SLR050_RP100_epa_flood),
1,
NA
)) %>%
st_as_sf(merge = T) %>%
st_set_crs(26910) %>%
st_make_valid() %>%
st_transform(4326)
epa_bldg_flooded_max <-
epa_bldg %>%
st_transform(4326) %>%
.[flood_max_extent,] %>%
saveRDS("epa_bldg_flooded_max.rds")
projection <- "+proj=utm +zone=10 +ellps=GRS80 +datum=NAD83 +units=ft +no_defs"
epa_bldg_flooded_max <-
readRDS("epa_bldg_flooded_max.rds") %>%
st_transform(projection) %>%
mutate(
area = st_area(.) %>% as.numeric()
)
epa_bldg_perc_damage <- readRDS("epa_bldg_perc_damage.rds")
epa_bldg_damage <-
epa_bldg_perc_damage %>%
left_join(
epa_bldg_flooded_max %>%
st_drop_geometry() %>%
select(osm_id, area)
) %>%
mutate(
damage = area * 200 * perc_damage
) %>%
select(osm_id, SLR, RP, damage)
projection <- "+proj=utm +zone=10 +ellps=GRS80 +datum=NAD83 +units=ft +no_defs"
epa_bldg_flooded_max <-
readRDS("epa_bldg_flooded_max.rds") %>%
st_transform(projection) %>%
mutate(
area = st_area(.) %>% as.numeric()
)
epa_bldg_perc_damage <- readRDS("epa_bldg_perc_damage.rds")
epa_bldg_damage <-
epa_bldg_perc_damage %>%
left_join(
epa_bldg_flooded_max %>%
st_drop_geometry() %>%
select(osm_id, area)
) %>%
mutate(
damage = area * 200 * perc_damage
) %>%
dplyr::select(osm_id, SLR, RP, damage)
epa_bldg_aal_by_slr <-
epa_bldg_damage %>%
pivot_wider(
names_from = RP,
values_from = damage
) %>%
replace(is.na(.), 0) %>%
mutate(
damage =
0.95*(`001`+`020`)/2 +
0.04*(`020`+`100`)/2 +
0.01*(`100`)
) %>%
dplyr::select(osm_id, SLR, damage)
rcp45 <- read_csv("https://raw.githubusercontent.com/stanfordfuturebay/stanfordfuturebay.github.io/master/advanced/rcp45_sanfrancisco.csv")
rcp45
epa_bldg_aal_by_year <-
epa_bldg_aal_by_slr %>%
left_join(
rcp45 %>%
mutate(
SLR = str_pad(SLR, 3 , "left", "0")
) %>%
select(
SLR,
`2020`,
`2030`,
`2040`,
`2050`
)
) %>%
pivot_longer(
`2020`:`2050`,
names_to = "year",
values_to = "occurrence"
) %>%
pivot_longer(
c(damage,occurrence),
names_to = "key",
values_to = "value"
) %>%
pivot_wider(
names_from = c("key","SLR"),
values_from = value
) %>%
replace(is.na(.), 0) %>%
mutate(
damage =
occurrence_000 * (damage_000 + damage_025)/2 +
occurrence_025 * (damage_025 + damage_050)/2 +
occurrence_050 * (damage_050)
) %>%
dplyr::select(osm_id, year, damage)
epa_bldg_aal_by_year_map <-
epa_bldg_aal_by_year %>%
pivot_wider(
names_from = year,
values_from = damage
) %>%
mutate(
change = `2050`-`2020`
) %>%
left_join(
epa_bldg_flooded_max %>%
select(osm_id)
) %>%
st_as_sf() %>%
st_transform(4326)
aal_pal <- colorNumeric(
palette = "Reds",
domain = c(0,epa_bldg_aal_by_year_map$`2050`)
)
epa_bldg_aal_by_year_map %>%
leaflet() %>%
addMapboxTiles(
style_id = "light-v9",
username = "mapbox"
) %>%
addPolygons(
fillColor = ~aal_pal(`2020`),
color = "gray",
fillOpacity = 1,
opacity = 1,
weight = 0.25,
highlightOptions = highlightOptions(
color = "white",
weight = 2
),
label = ~paste0("$",prettyNum(signif(`2020`,2),",")," average annualized loss in 2020"),
group = "2020"
) %>%
addPolygons(
fillColor = ~aal_pal(`2050`),
color = "gray",
fillOpacity = 1,
opacity = 1,
weight = 0.25,
highlightOptions = highlightOptions(
color = "white",
weight = 2
),
label = ~paste0("$",prettyNum(signif(`2050`,2),",")," average annualized loss in 2050"),
group = "2050"
) %>%
addPolygons(
fillColor = ~aal_pal(change),
color = "gray",
fillOpacity = 1,
opacity = 1,
weight = 0.25,
highlightOptions = highlightOptions(
color = "white",
weight = 2
),
label = ~paste0("$",prettyNum(signif(change,2),",")," change in average annualized loss from 2020 to 2050"),
group = "Change"
) %>%
addLegend(
pal = aal_pal,
values = ~`2050`,
title = "AAL"
) %>%
addLayersControl(
baseGroups = c("2020","2050","Change"),
options = layersControlOptions(collapsed = FALSE)
) %>%
showGroup("2050")
aal_pal <- colorNumeric(
palette = "Reds",
domain = c(0,epa_bldg_aal_by_year_map$`2050`)
)
epa_bldg_aal_by_year_map %>%
leaflet() %>%
addMapboxTiles(
style_id = "light-v9",
username = "mapbox"
) %>%
addPolygons(
fillColor = ~aal_pal(`2020`),
color = "gray",
fillOpacity = 1,
opacity = 1,
weight = 0.25,
highlightOptions = highlightOptions(
color = "white",
weight = 2
),
label = ~paste0("$",prettyNum(signif(`2020`,2),",")," average annualized loss in 2020"),
group = "2020"
) %>%
addPolygons(
fillColor = ~aal_pal(`2050`),
color = "gray",
fillOpacity = 1,
opacity = 1,
weight = 0.25,
highlightOptions = highlightOptions(
color = "white",
weight = 2
),
label = ~paste0("$",prettyNum(signif(`2050`,2),",")," average annualized loss in 2050"),
group = "2050"
) %>%
addPolygons(
fillColor = ~aal_pal(change),
color = "gray",
fillOpacity = 1,
opacity = 1,
weight = 0.25,
highlightOptions = highlightOptions(
color = "white",
weight = 2
),
label = ~paste0("$",prettyNum(signif(change,2),",")," change in average annualized loss from 2020 to 2050"),
group = "Change"
) %>%
addLegend(
pal = aal_pal,
values = ~`2050`,
title = "AAL"
) %>%
addLayersControl(
baseGroups = c("2020","2050","Change"),
options = layersControlOptions(collapsed = FALSE)
) %>%
showGroup("2050")
library(censusapi)
knitr::opts_chunk$set(echo = TRUE)
library(remotes)
install_github("yonghah/esri2sf")
library(tidyverse)
library(sf)
library(leaflet)
library(stars)
library(tigris)
library(jsonlite)
library(esri2sf)
library(raster)
library(mapboxapi)
library(censusapi)
library(mapview)
library(plotly)
Sys.setenv(CENSUS_KEY = "c8aa67e4086b4b5ce3a8717f59faa9a28f611dab")
knitr::opts_chunk$set(echo = TRUE)
library(remotes)
install_github("yonghah/esri2sf")
library(tidyverse)
library(sf)
library(leaflet)
library(stars)
library(tigris)
library(jsonlite)
library(esri2sf)
library(raster)
library(mapboxapi)
library(censusapi)
library(mapview)
library(plotly)
Sys.setenv(CENSUS_KEY = "c8aa67e4086b4b5ce3a8717f59faa9a28f611dab")
