),
estimate,
NA
)
)  %>%
summarize(
total_pop = sum(estimate, na.rm = T),
total_burdened = sum(rent_burdened, na.rm = T)
) %>%
mutate(
percentage = total_burdened / total_pop,
)
}
percentage_calculator <- function(df){
df %>%
group_by(year, occupant_type) %>%
mutate(
rent_burdened = ifelse(
percentage %in% c(
"30.0 to 34.9 percent",
"35.0 to 39.9 percent",
"40.0 to 49.9 percent",
"50.0 percent or more"
),
estimate,
NA
)
)  %>%
summarize(
total_pop = sum(estimate, na.rm = T),
total_burdened = sum(rent_burdened, na.rm = T)
) %>%
mutate(
percentage = total_burdened / total_pop,)
}
rent_burdens <- map(years, rent_burden) %>%
set_names(years) %>%
bind_rows(.id = "year")
owner_burdens <- map(years, owner_burden) %>%
set_names(years) %>%
bind_rows(.id = "year")
owner_burden <- function(year){
census_owner_labels <- acs_vars %>%
filter(
.data$year == .env$year,
group %in% c("B25095")
)
getCensus(
name = "acs/acs5",
vintage = year,
region = "place:20956",
regionin = "state:06",
vars = "group(B25095)"
) %>%
process_census_data(labels = census_owner_labels) %>%
mutate(occupant_type = "owner")
}
percentage_calculator <- function(df){
df %>%
group_by(year, occupant_type) %>%
mutate(
rent_burdened = ifelse(
percentage %in% c(
"30.0 to 34.9 percent",
"35.0 to 39.9 percent",
"40.0 to 49.9 percent",
"50.0 percent or more"
),
estimate,
NA
)
)  %>%
summarize(
total_pop = sum(estimate, na.rm = T),
total_burdened = sum(rent_burdened, na.rm = T)
) %>%
mutate(
percentage = total_burdened / total_pop,)
}
owner_burdens <- map(years, owner_burden) %>%
set_names(years) %>%
bind_rows(.id = "year")
burden_chart <- rbind(
percentage_calculator(owner_burdens),
percentage_calculator(rent_burdens)
) %>%
ggplot() +
geom_bar(
aes(
x = year,
y = percentage*100,
fill = occupant_type
),
stat = "identity",
position = "dodge"
) +
labs(
x = "Year",
y = "Percentage",
title = "Housing Burden Comparison"
) +
scale_y_continuous(expand = c(0,0)) +
theme_classic()
burden_chart
epa_exemption <- smc_exemption %>%
mutate(
APN = `Parcel Number` %>%
str_replace_all("-","")
) %>%
filter(APN %in% epa_zoning$APN) %>%
left_join(epa_zoning) %>%
# could have instead done right_join
st_as_sf() %>%
filter(New_Zone == "R-LD")
leaflet() %>%
addProviderTiles(provider = providers$CartoDB.Positron) %>%
addPolygons(
data = epa_exemption %>%
filter(`Fiscal Year` == "2018/2019"),
fillColor = "yellow",
color = "black",
weight = 0.5
) %>%
addPolygons(
data = epa_exemption %>%
filter(`Fiscal Year` == "2018/2019") %>%
filter(Exemption %in% c(5600,7000)),
fillColor = "blue",
color = "black",
weight = 0.5,
fillOpacity = 1
)
leaflet() %>%
addProviderTiles(provider = providers$CartoDB.Positron) %>%
addPolygons(
data = epa_exemption %>%
filter(`Fiscal Year` == "2018/2019"),
fillColor = "yellow",
color = "black",
weight = 0.5
) %>%
addPolygons(
data = epa_exemption %>%
filter(`Fiscal Year` == "2018/2019") %>%
filter(Exemption %in% c(5600,7000)),
fillColor = "blue",
color = "black",
weight = 0.5,
fillOpacity = 1
)
epa_working_df <-
epa_exemption %>%
st_drop_geometry() %>%
select(`Fiscal Year`, `Net Value`, `APN`, Exemption) %>%
mutate(
Occupant = case_when(
Exemption %in% c(5600, 7000) ~ "Owner-occupied",
TRUE ~ "Renter-Occupied"
)
) %>%
group_by(APN)
epa_exemption %>%
st_drop_geometry() %>%
filter(Exemption <= 7000) %>%
mutate(
Occupant = case_when(
Exemption %in% c(5600, 7000) ~ "Owner-occupied",
TRUE ~ "Renter-Occupied"
)
) %>%
group_by(Occupant, `Fiscal Year`) %>%
summarise(
`Net Value` = mean(`Net Value`)
) %>%
ggplot(
aes(
x = `Fiscal Year`,
y = `Net Value`,
color = Occupant,
group = Occupant
)
) +
geom_line()
burden_chart <- rbind(
percentage_calculator(owner_burdens),
percentage_calculator(rent_burdens)
) %>%
ggplot() +
geom_bar(
aes(
x = year,
y = percentage*100,
fill = occupant_type
),
stat = "identity",
position = "dodge"
) +
labs(
x = "Year",
y = "Percentage",
title = "Housing Burden Comparison"
) +
scale_y_continuous(expand = c(0,0)) +
theme_classic()
burden_chart
epa_working_df <-
epa_exemption %>%
st_drop_geometry() %>%
select(`Fiscal Year`, `Net Value`, `APN`, Exemption) %>%
mutate(
Occupant = case_when(
Exemption %in% c(5600, 7000) ~ "Owner-occupied",
TRUE ~ "Renter-Occupied"
)
)
epa_working_df <-
epa_exemption %>%
st_drop_geometry() %>%
select(`Fiscal Year`, `Net Value`, `APN`, Exemption) %>%
mutate(
Occupant = case_when(
Exemption %in% c(5600, 7000) ~ "Owner-occupied",
TRUE ~ "Renter-Occupied"
)
) %>%
group_by(APN)
census_owner_labels <- acs_vars %>%
filter(
year == 2019,
group %in% c("B25095")
)
try <-
getCensus(
name = "acs/acs5",
vintage = 2019,
region = "place:20956",
regionin = "state:06",
vars = "group(B25095)"
) %>%
mutate(
placeID = paste0(state,place)
) %>%
select(!c(state, place, GEO_ID, NAME) ) %>%
pivot_longer(
ends_with("E"),
names_to = "variable",
values_to = "estimate"
) %>%
left_join(
census_owner_labels %>%
select(name, label),
by = (c("variable" = "name"))
) %>%
separate(
label,
into = c(NA,NA,"income_range","percentage"),
sep = "!!"
) %>%
filter(
!is.na(percentage)
) %>%
mutate(occupant_type = "renter")
View(try)
?set_names
list(1, 2, c = "3")
list(tibble(a = 1), tibble(a = 2))
list(tibble(a = 1), tibble(a = 2)) %>% bind_rows()
list(tibble(a = 1), tibble(a = 2)) %>% bind_rows(.id = "id")
list(tibble(a = "foo"), tibble(a = "bar")) %>% bind_rows(.id = "id")
census_owner_labels <- acs_vars %>%
filter(
year == 2019,
group %in% c("B25095")
)
try <-
getCensus(
name = "acs/acs5",
vintage = 2019,
region = "place:20956",
regionin = "state:06",
vars = "group(B25095)"
) %>%
mutate(
placeID = paste0(state,place)
) %>%
select(!c(state, place, GEO_ID, NAME) ) %>%
pivot_longer(
ends_with("E"),
names_to = "variable",
values_to = "estimate"
) %>%
left_join(
census_owner_labels %>%
select(name, label),
by = (c("variable" = "name"))
) %>%
separate(
label,
into = c(NA,NA,"income_range","percentage"),
sep = "!!"
) %>%
filter(
!is.na(percentage)
) %>%
mutate(occupant_type = "renter")
try
getCensus(
name = "acs/acs5",
vintage = 2019,
region = "place:20956",
regionin = "state:06",
vars = "group(B25095)"
) %>%
mutate(
placeID = paste0(state,place)
) %>%
select(!c(state, place, GEO_ID, NAME) ) %>%
pivot_longer(
ends_with("E"),
names_to = "variable",
values_to = "estimate"
) %>%
left_join(
census_owner_labels %>%
select(name, label),
by = (c("variable" = "name"))
)
try <-
getCensus(
name = "acs/acs5",
vintage = 2019,
region = "place:20956",
regionin = "state:06",
vars = "group(B25095)"
) %>%
mutate(
placeID = paste0(state,place)
) %>%
select(!c(state, place, GEO_ID, NAME) ) %>%
pivot_longer(
ends_with("E"),
names_to = "variable",
values_to = "estimate"
) %>%
left_join(
census_owner_labels %>%
select(name, label),
by = (c("variable" = "name"))
)
try
getCensus(
name = "acs/acs5",
vintage = 2019,
region = "place:20956",
regionin = "state:06",
vars = "group(B25095)"
)
getCensus(
name = "acs/acs5",
vintage = 2019,
region = "place:20956",
regionin = "state:06",
vars = "group(B25095)"
) %>%
mutate(
placeID = paste0(state,place)
) %>%
select(!c(state, place, GEO_ID, NAME) ) %>%
pivot_longer(
ends_with("E"),
names_to = "variable",
values_to = "estimate"
)
getCensus(
name = "acs/acs5",
vintage = 2019,
region = "place:20956",
regionin = "state:06",
vars = "group(B25095)"
) %>%
mutate(
placeID = paste0(state,place)
) %>%
select(!c(state, place, GEO_ID, NAME) )
getCensus(
name = "acs/acs5",
vintage = 2019,
region = "place:20956",
regionin = "state:06",
vars = "group(B25095)"
) %>%
mutate(
placeID = paste0(state,place)
) %>%
select(!c(state, place, GEO_ID, NAME) ) %>%
pivot_longer(
ends_with("E"),
names_to = "variable",
values_to = "estimate"
) %>%
left_join(
census_owner_labels %>%
select(name, label),
by = (c("variable" = "name"))
) %>% view()
census_owner_labels
rent_burden(2019)
owner_burdens2 <- owner_burden(2019)
View(owner_burdens2)
census_owner_labels <- acs_vars %>%
filter(
.data$year == .env$year,
group %in% c("B25095")
)
census_owner_labels <- acs_vars %>%
filter(
year == 2019,
group %in% c("B25095")
)
View(census_owner_labels)
try <-  getCensus(
name = "acs/acs5",
vintage = 2019,
region = "place:20956",
regionin = "state:06",
vars = "group(B25095)"
) %>%
process_census_data(labels = census_owner_labels) %>%
mutate(occupant_type = "owner")
View(try)
owner_burdens2 <- owner_burden(2019)
View(owner_burdens2)
owner_burdens2 %>%
group_by(year, occupant_type, income_range )
owner_burdens2 %>%
group_by(occupant_type, income_range)
owner_burdens2 %>%
group_by(income_range)
owner_burdens2 <- rbind(owner_burden(2019), rent_burden(2019))
owner_burdens2 %>%
group_by(income_range, occupant_type)
owner_burdens2 %>%
group_by(income_range, occupant_type) %>%
select(!ends_with("Not Computed"))
owner_burdens2 %>%
group_by(income_range, occupant_type) %>%
select(slice("Not Computed"))
owner_burdens2 %>%
group_by(income_range, occupant_type) %>%
select(slice(-c("Not Computed"))
owner_burdens2 %>%
owner_burdens2 %>%
group_by(income_range, occupant_type) %>%
select(slice(c("Not Computed"))
owner_burdens2 %>%
owner_burdens2 %>%
group_by(income_range, occupant_type) %>%
[!owner_burdens2$percentage == "Not Computed"]
owner_burdens2 %>%
group_by(income_range, occupant_type) %>%
[!(owner_burdens2$percentage == "Not Computed")]
owner_burdens2 %>%
group_by(income_range, occupant_type) %>%
[!(.$percentage == "Not Computed")]
owner_burdens2 %>%
group_by(income_range, occupant_type) %>%
.[!(owner_burdens2$percentage == "Not Computed")]
owner_burdens2 %>%
group_by(income_range, occupant_type) %>%
.[!(.$percentage == "Not Computed")]
owner_burdens2 %>%
group_by(income_range, occupant_type) %>%
owner_burdens2[!(owner_burdens2$percentage == "Not Computed")]
- function(df){
owner_burdens2 %>%
group_by(income_range, occupant_type) %>%
subset(percentage!= "Not Computed")
owner_burdens2 %>%
group_by(income_range, occupant_type) %>%
subset(percentage!= "Not Computed")
owner_burdens2 %>%
group_by(income_range, occupant_type) %>%
subset(percentage!= "Not Computed")
owner_burdens2 %>%
group_by(income_range, occupant_type) %>%
subset(.$percentage!= "Not Computed")
income_burden_percentage_calculator <- function(df){
owner_burdens2 %>%
group_by(income_range, occupant_type) %>%
subset(percentage!= "Not computed")
owner_burdens2 %>%
group_by(income_range, occupant_type) %>%
subset(percentage!= "Not computed")
owner_burdens2 %>%
group_by(income_range, occupant_type) %>%
subset(percentage!= "Not computed")
owner_burdens2 %>%
group_by(income_range, occupant_type) %>%
subset(percentage!= "Not computed")
View(owner_burdens2)
View(owner_burdens2)
owner_burdens2 %>%
group_by(income_range, occupant_type) %>%
subset(percentage!= "Not computed")
View(owner_burdens2)
View(owner_burdens2)
View(owner_burdens2)
owner_burdens2 %>%
group_by(income_range, occupant_type) %>%
filter(percentage!= "Not computed")
View(owner_burdens2)
owner_burdens2
